/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esquemasypantallas.frmInternal;

import clases.Arbitro;
import clases.Incidencia;
import clases.Jugador;
import clases.Partido;
import clases.Utilidades;
import controlador.ControlIncidencia;
import controlador.ControlJugador;
import controlador.ControlPartido;
import controlador.ControlUsuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class frmModPart extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmModPart
     */
    private Partido part;
    public frmModPart(Partido part) {
        initComponents();
        this.part = part;
        ControlIncidencia ci = new ControlIncidencia();
        this.part.setIncidencias(ci.getIncidencias(this.part));
       
        combo();
        ControlUsuario cu = new ControlUsuario();
        Utilidades util = new Utilidades();
        this.jTxtELocal.setText(part.getEquipoLocal().toString());
        this.jTxtEVisita.setText(part.getEquipoVisita().toString());
        this.jTxtFecha.setText(part.getFecha());
        this.jTxtHoraFin.setText(part.getHora_fin());
        this.jTxtHoraInicio.setText(part.getHora_inicio());
        util.loadCombo(cu.getArbitros(), this.jCmbArbitro);
        loadTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTxtEVisita = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTxtMinVisita = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVisitante = new javax.swing.JTable();
        jCmbIncVisita = new javax.swing.JComboBox();
        jBtnAgregarVisita = new javax.swing.JButton();
        jBtnEliminarVisita = new javax.swing.JButton();
        jCmbTiempoVisita = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jCmbJugVis = new javax.swing.JComboBox<>();
        jBtnAgregarJugador = new javax.swing.JButton();
        jBtnLimpiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTxtELocal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLocal = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTxtMinLocal = new javax.swing.JFormattedTextField();
        jCmbIncLocal = new javax.swing.JComboBox();
        jCmbTiempoLocal = new javax.swing.JComboBox();
        jBtnEliminarLocal = new javax.swing.JButton();
        jBtnAgregarLocal = new javax.swing.JButton();
        jCmbJugLoc = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jTxtHoraInicio = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTxtFecha = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jTxtJornada = new javax.swing.JTextField();
        jTxtHoraFin = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jCmbArbitro = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jLabel4.setText("Visitante");

        jTxtEVisita.setText("EquipoVisita");
        jTxtEVisita.setEnabled(false);

        jLabel8.setText("Jugador");

        jLabel9.setText("Incidencia");

        jLabel10.setText("Minuto");

        try {
            jTxtMinVisita.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTxtMinVisita.setText("15:03");

        jTableVisitante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jugador", "Tipo", "Minuto", "Tiempo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableVisitante);

        jCmbIncVisita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Gol de penalti", "Autogol", "Gol ol√≠mpico", "Gol libre directo", "Asistencia", "Penalti", "Corner", "Tarjeta Roja", "Tarjeta Amarilla" }));

        jBtnAgregarVisita.setText("Agregar");
        jBtnAgregarVisita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnAgregarVisitaMouseClicked(evt);
            }
        });

        jBtnEliminarVisita.setText("Eliminar");
        jBtnEliminarVisita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEliminarVisitaMouseClicked(evt);
            }
        });

        jCmbTiempoVisita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Primer tiempo", "Segundo Tiempo", "Tiempo Extra" }));

        jButton1.setText("Mostrar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jCmbJugVis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTxtMinVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCmbTiempoVisita, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTxtEVisita)
                            .addComponent(jCmbIncVisita, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCmbJugVis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnAgregarVisita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEliminarVisita)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtEVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCmbJugVis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jCmbIncVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTxtMinVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCmbTiempoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAgregarVisita)
                    .addComponent(jBtnEliminarVisita))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        jBtnAgregarJugador.setText("Guardar");
        jBtnAgregarJugador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnAgregarJugadorMouseClicked(evt);
            }
        });

        jBtnLimpiar.setText("Limpiar Campos");
        jBtnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnLimpiarMouseClicked(evt);
            }
        });

        jLabel3.setText("Local");

        jTxtELocal.setText("EquipoLocal");
        jTxtELocal.setEnabled(false);

        jTableLocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jugador", "Tipo", "Minuto", "Tiempo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableLocal);

        jLabel5.setText("Jugador");

        jLabel6.setText("Incidencia");

        jLabel7.setText("Minuto");

        try {
            jTxtMinLocal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTxtMinLocal.setText("33:45");

        jCmbIncLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Gol de penalti", "Autogol", "Gol ol√≠mpico", "Gol libre directo", "Asistencia", "Penalti", "Corner", "Tarjeta Roja", "Tarjeta Amarilla" }));

        jCmbTiempoLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Primer tiempo", "Segundo Tiempo", "Tiempo Extra" }));

        jBtnEliminarLocal.setText("Eliminar");
        jBtnEliminarLocal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEliminarLocalMouseClicked(evt);
            }
        });

        jBtnAgregarLocal.setText("Agregar");
        jBtnAgregarLocal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnAgregarLocalMouseClicked(evt);
            }
        });

        jCmbJugLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jCmbJugLoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCmbIncLocal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxtELocal)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTxtMinLocal, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCmbTiempoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnAgregarLocal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEliminarLocal)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtELocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCmbJugLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jCmbIncLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtMinLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCmbTiempoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAgregarLocal)
                    .addComponent(jBtnEliminarLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        try {
            jTxtHoraInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Fecha");

        jLabel2.setText("Hora inicio");

        try {
            jTxtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Jornada");

        jTxtJornada.setText("Primera");
        jTxtJornada.setEnabled(false);

        try {
            jTxtHoraFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel12.setText("Hora fin");

        jCmbArbitro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Arbitro");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtJornada))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCmbArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTxtJornada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jTxtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTxtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCmbArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addComponent(jLabel2))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBtnLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnAgregarJugador))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnAgregarJugador)
                            .addComponent(jBtnLimpiar)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAgregarVisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnAgregarVisitaMouseClicked
        // TODO add your handling code here:
        if(validar(jCmbJugVis,jCmbIncVisita,jTxtMinVisita,jCmbTiempoVisita)){
            if(alreadyInTable(this.jCmbJugVis.getSelectedItem().toString()+this.jTxtMinVisita.getText()+this.jCmbTiempoVisita.getSelectedItem().toString(),this.jTableVisitante)){
                agregarTabla((Jugador) this.jCmbJugVis.getSelectedItem(),jCmbIncVisita.getSelectedItem().toString(),jTxtMinVisita.getText(),this.jCmbTiempoVisita.getSelectedItem().toString(),this.jTableVisitante);
                limpiar(jCmbJugVis,jCmbIncVisita,jTxtMinVisita,jCmbTiempoVisita);
            }
        }

        //agregarTabla(jTxtJugVisita.getText(), jCmbIncVisita.getSelectedItem().toString(), jTxtMinVisita.getText(),jCmbIncVisita.getSelectedItem().toString(),jTableVisitante);
    }//GEN-LAST:event_jBtnAgregarVisitaMouseClicked

    private void jBtnEliminarVisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminarVisitaMouseClicked
        // TODO add your handling code here:
        int index = jTableVisitante.getSelectedRow();
        eliminarTabla(index, jTableVisitante);
    }//GEN-LAST:event_jBtnEliminarVisitaMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        /*DefaultTableModel model = (DefaultTableModel) jTableLocal.getModel();
        int size = model.getRowCount();
        String [] cont = new String[size];
        for(int i =0; i< size; i++){
            cont[i] = model.getValueAt(i, 0).toString() + model.getValueAt(i, 1).toString() +
            model.getValueAt(i, 2).toString();

        }*/
        Object arb = this.jCmbArbitro.getSelectedItem();
        String idArb = String.valueOf(((Arbitro)arb).getIdArb());
        JOptionPane.showMessageDialog(rootPane, idArb);
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jBtnAgregarJugadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnAgregarJugadorMouseClicked
        // TODO add your handling code here:
        if(valFecha()){

            llenar();
            limpiar();
        }
    }//GEN-LAST:event_jBtnAgregarJugadorMouseClicked

    private void jBtnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnLimpiarMouseClicked
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jBtnLimpiarMouseClicked

    private void jBtnEliminarLocalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminarLocalMouseClicked
        // TODO add your handling code here:
        int index = jTableLocal.getSelectedRow();
        eliminarTabla(index,this.jTableLocal);

    }//GEN-LAST:event_jBtnEliminarLocalMouseClicked

    private void jBtnAgregarLocalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnAgregarLocalMouseClicked
        // TODO add your handling code here:
        if(validar(jCmbJugLoc,jCmbIncLocal,jTxtMinLocal,jCmbTiempoLocal)){
            if(alreadyInTable(jCmbJugLoc.getSelectedItem().toString()+this.jTxtMinLocal.getText()+this.jCmbTiempoLocal.getSelectedItem().toString(),this.jTableLocal)){
                agregarTabla((Jugador) jCmbJugLoc.getSelectedItem(),jCmbIncLocal.getSelectedItem().toString(),jTxtMinLocal.getText(),this.jCmbTiempoLocal.getSelectedItem().toString(),this.jTableLocal);
                limpiar(jCmbJugLoc,jCmbIncLocal,jTxtMinLocal,jCmbTiempoLocal);
            }
        }

    }//GEN-LAST:event_jBtnAgregarLocalMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregarJugador;
    private javax.swing.JButton jBtnAgregarLocal;
    private javax.swing.JButton jBtnAgregarVisita;
    private javax.swing.JButton jBtnEliminarLocal;
    private javax.swing.JButton jBtnEliminarVisita;
    private javax.swing.JButton jBtnLimpiar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCmbArbitro;
    private javax.swing.JComboBox jCmbIncLocal;
    private javax.swing.JComboBox jCmbIncVisita;
    private javax.swing.JComboBox<String> jCmbJugLoc;
    private javax.swing.JComboBox<String> jCmbJugVis;
    private javax.swing.JComboBox jCmbTiempoLocal;
    private javax.swing.JComboBox jCmbTiempoVisita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableLocal;
    private javax.swing.JTable jTableVisitante;
    private javax.swing.JTextField jTxtELocal;
    private javax.swing.JTextField jTxtEVisita;
    private javax.swing.JFormattedTextField jTxtFecha;
    private javax.swing.JFormattedTextField jTxtHoraFin;
    private javax.swing.JFormattedTextField jTxtHoraInicio;
    private javax.swing.JTextField jTxtJornada;
    private javax.swing.JFormattedTextField jTxtMinLocal;
    private javax.swing.JFormattedTextField jTxtMinVisita;
    // End of variables declaration//GEN-END:variables

 private boolean validar(JComboBox jugador,JComboBox incidencia,JFormattedTextField minuto, JComboBox tiempo){
    boolean bandera = true;
    String errors="";
   
    if(jugador.getSelectedItem().equals("Seleccionar") || incidencia.getSelectedIndex() == 0 || minuto.getText().trim().length() == 1 || tiempo.getSelectedIndex() == 0){
    bandera = false;
    
    errors = " Debe llenar todos los campos y seleccionar un item de las cajas de selecci√≥n\n";
    }
    if(!bandera){
            JOptionPane.showMessageDialog(null, errors,"Los datos de entrada contienen errores de validaci√≥n",1);
        }
    return bandera;    
    }
   private void limpiar(JComboBox jugador,JComboBox incidencia,JFormattedTextField minuto, JComboBox tiempo){
    jugador.setSelectedIndex(0);
    incidencia.setSelectedIndex(0);
    minuto.setText("");
    tiempo.setSelectedIndex(0);
   }
   private boolean alreadyInTable(String name, JTable tabla){
       DefaultTableModel model = (DefaultTableModel) tabla.getModel();
       int c = model.getColumnCount();
       int r = model.getRowCount();
       boolean band = true;
       String aux = "";
       ArrayList<String> repe = new ArrayList<String>();
      
       for(int j =0; j<r;j++){
           aux += model.getValueAt(j,0 );
           aux +=model.getValueAt(j,2 );
           aux +=model.getValueAt(j,3 );
           repe.add(aux);
           aux = "";
       }
       for(int i= 0; i< repe.size();i++){
       if(name.toLowerCase().equals(repe.get(i).toLowerCase())){
       band= false;
       JOptionPane.showMessageDialog(rootPane, "El jugador no puede cometer otra incidencia en el mismo minuto en el mismo tiempo","Error",2);
       }
       
       }
       
       
       /*for(int i = 0; i< c;i++){
       for(int j =0; j<r;j++){
       if(name.equals(model.getValueAt(j,i))){
       band= false;
       getToolkit().beep();
       }
       }
       }*/
       return band;
   }

   private boolean valFecha(){
    boolean band = true;
    
    String errores = "";
        int corre = 1;
        final String regex = "^\\d{4}[\\-\\/\\s]?((((0[13578])|(1[02]))[\\-\\/\\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\\-\\/\\s]?(([0-2][0-9])|(30)))|(02[\\-\\/\\s]?[0-2][0-9]))$";
        if(!this.jTxtFecha.getText().matches(regex)){
        band = false;
        errores += "El formato en el que ingreso la fecha es inv√°lido\n";
        corre++;
        }
        if ((!this.jTxtHoraInicio.getText().matches("([01]?[0-9]|2[0-3]):[0-5][0-9]")) || (!this.jTxtHoraFin.getText().matches("([01]?[0-9]|2[0-3]):[0-5][0-9]"))) {
          errores += "El formato en el que ingreso la hora es inv√°lido\n";
        corre++; 
        band = false;
       }
        
        try {
           SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
           Date d1 = sdf.parse(jTxtHoraInicio.getText());
           Date d2 = sdf.parse(jTxtHoraFin.getText());
           long elapsed = d2.getTime() -d1.getTime();
            
            if (elapsed < 5400000) {
               errores += "El el partido no puede durar menos de una hora y media\n";
        corre++; 
        band = false; 
            }
       } catch (Exception e) {
       }
        
    if(!band){
            JOptionPane.showMessageDialog(null, errores,"Los datos de entrada contienen errores de validaci√≥n",1);
        }
    return band;   
   }
   
   private void llenar(){
       
       if(validarEnviar()){
       Partido p = new Partido();
       p.setFecha(jTxtFecha.getText());
       p.setHora_inicio(jTxtHoraInicio.getText());
       p.setHora_fin(jTxtHoraFin.getText());
         Object arb = this.jCmbArbitro.getSelectedItem();
        int idArb = ((Arbitro)arb).getIdArb();
       p.setIdArb(idArb);
       p.setIdPart(this.part.getIdPart());
       p.setEstado("Completado");
       p.setJornada("Primera");
       p.setIdEqLoc(this.part.getIdEqLoc());
       p.setIdEqVis(this.part.getIdEqVis());
       DefaultTableModel ml = (DefaultTableModel) jTableLocal.getModel();
       DefaultTableModel mv = (DefaultTableModel) jTableVisitante.getModel();
       Jugador j;
         ControlIncidencia ci =new ControlIncidencia();
           for (int i = 0; i < this.part.getIncidencias().size(); i++) {
               ci.delete(this.part.getIncidencias().get(i));
           }
       
       for(int i = 0; i< ml.getRowCount();i++){
           j = new Jugador();
           j = (Jugador) ml.getValueAt(i, 0);
           
        p.addIncidencia(new Incidencia(this.part.getIdPart(), this.part,j.getIdJug(), j, ml.getValueAt(i, 2).toString(),  ml.getValueAt(i, 3).toString(),ml.getValueAt(i, 1).toString(),"l"));
       }
       for(int i = 0; i< mv.getRowCount();i++){
        j = new Jugador();
           j = (Jugador) mv.getValueAt(i, 0);
        p.addIncidencia(new Incidencia(this.part.getIdPart(), this.part,j.getIdJug(), j, mv.getValueAt(i, 2).toString(), mv.getValueAt(i, 3).toString(), mv.getValueAt(i, 1).toString(),"v"));
       }
       
       p.setScore(this.jTxtELocal.getText(),this.jTxtEVisita.getText());
       
       String mensaje = "Resultado:\n"
               + "Fecha: "+ p.getFecha()
               + "\nHora inicio: " + p.getHora_inicio()
               + "\nHora fin: "+ p.getHora_fin()
               + "\nGanador: "+ p.getGanador()
               + "\nPuntaje: "+ p.getScoreLocal() + " - " + p.getScoreVisita();
       
       ControlPartido cp = new ControlPartido ();
       JOptionPane.showMessageDialog(rootPane,mensaje+"\n"+cp.update(p) );
       
       }
       
       
       
    
   }
   
   private boolean validarEnviar(){
   boolean band = true;
   String errors = "";
   int corre = 1;
    if(this.jTableLocal.getRowCount() == 0 && this.jTableVisitante.getRowCount() == 0){
       band = false;
       errors += "Debe haber almenos una incidencia de tipo gol en algun equipo para poder guardar\n";
        corre++;
       }
    if(thereIsGoals(jTableLocal) && thereIsGoals(jTableVisitante)){
    band = false;
       errors += "Debe haber almenos un equipo con un gol\n";
        corre++;
    }
    
   if(!band){
   JOptionPane.showMessageDialog(rootPane, errors);
   }
   return band;
   }
   
   private boolean thereIsGoals(JTable t){
       boolean band = true;
   DefaultTableModel tab = (DefaultTableModel) t.getModel();
   
   int s = tab.getRowCount();
   for(int i = 0; i< s; i++){
   if( tab.getValueAt(i, 1).toString().toLowerCase().contains("gol")){
   
   band=false;
   }
   
   }
   
   return band;
   }
  
   
private void limpiar(){
this.jTxtFecha.setText("");
this.jTxtHoraInicio.setText("");
this.jTxtHoraFin.setText("");
this.jCmbJugLoc.setSelectedIndex(0);
this.jCmbJugVis.setSelectedIndex(0);
this.jCmbIncLocal.setSelectedIndex(0);
this.jCmbIncVisita.setSelectedIndex(0);
this.jTxtMinLocal.setText("");
this.jTxtMinVisita.setText("");
this.jCmbTiempoLocal.setSelectedIndex(0);
this.jCmbTiempoVisita.setSelectedIndex(0);
DefaultTableModel modell = (DefaultTableModel)this.jTableLocal.getModel();
modell.setRowCount(0);
DefaultTableModel modelv = (DefaultTableModel)this.jTableVisitante.getModel();
modelv.setRowCount(0);
}
   
    private void eliminarTabla(int index, JTable tabla){
    
        if(index != -1){
        int mIndex = tabla.convertRowIndexToModel(index);
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            model.removeRow(mIndex);
        }
    }
    
    private void agregarTabla(Jugador nom,String inc,String min,String tiempo, JTable tabla){
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        Object[] vecto = new Object[4];
        vecto[0] = nom;
        vecto[1] = inc;
        vecto[2] = min;
        vecto[3] = tiempo;
        modelo.addRow(vecto);
    }


public void combo(){
DefaultComboBoxModel cbl = (DefaultComboBoxModel) this.jCmbJugLoc.getModel();
DefaultComboBoxModel cbv = (DefaultComboBoxModel) this.jCmbJugVis.getModel();
ControlJugador cj = new ControlJugador();
ArrayList<Jugador> jl = cj.getJugadores(this.part.getIdEqLoc());
ArrayList<Jugador> jv = cj.getJugadores(this.part.getIdEqVis());
    for (int i = 0; i < jl.size(); i++) {
        cbl.addElement(jl.get(i));
    }
    for (int i = 0; i < jv.size(); i++) {
        cbv.addElement(jv.get(i));
    }
    this.jCmbJugLoc.setModel(cbl);
    this.jCmbJugVis.setModel(cbv);
}

 public void loadTables(){
   for (int i = 0; i < this.part.getIncidencias().size(); i++) {
            if (this.part.getIncidencias().get(i).getEquipo().equals("l")) {
           agregarTabla(this.part.getIncidencias().get(i).getJugador(),this.part.getIncidencias().get(i).getTipo()  , this.part.getIncidencias().get(i).getMinuto(), this.part.getIncidencias().get(i).getTiempo(), this.jTableLocal);
       }else if (this.part.getIncidencias().get(i).getEquipo().equals("v")) {
           agregarTabla(this.part.getIncidencias().get(i).getJugador(),this.part.getIncidencias().get(i).getTipo()  , this.part.getIncidencias().get(i).getMinuto(), this.part.getIncidencias().get(i).getTiempo(), this.jTableVisitante);
       }
        }
 
 }
}
